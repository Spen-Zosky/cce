#!/usr/bin/env bash
# CCE Web Interface Manager

CCE_WEB_DIR=~/.cce-universal/web
PID_FILE="$CCE_WEB_DIR/server.pid"
LOG_FILE="$CCE_WEB_DIR/server.log"

# Check if full dashboard server exists
FULL_SERVER="$HOME/.cce-universal/web/server/index.js"

if [ -f "$FULL_SERVER" ] && grep -q "CCE Web Server" "$FULL_SERVER" 2>/dev/null; then
    # Use full dashboard server
    cd "$HOME/.cce-universal/web" && CCE_HOME="$HOME/.cce-universal" npm start
else
    # Use basic server
    find_free_port() {
        local port=3456
        while lsof -Pi :$port -sTCP:LISTEN -t >/dev/null 2>&1; do
            port=$((port + 1))
        done
        echo $port
    }

    start_server() {
        if [ -f "$PID_FILE" ]; then
            PID=$(cat "$PID_FILE")
            if ps -p $PID > /dev/null 2>&1; then
                echo "❌ Server already running (PID: $PID)"
                return 1
            fi
        fi
        
        # Check if dependencies are installed
        if [ ! -d "$CCE_WEB_DIR/node_modules" ]; then
            echo "📦 Installing dependencies..."
            cd "$CCE_WEB_DIR" && npm install --silent
        fi
        
        # Find free port and start
        PORT=$(find_free_port)
        export CCE_WEB_PORT=$PORT
        
        echo "🚀 Starting CCE Web Server..."
        cd "$CCE_WEB_DIR"
        nohup node server/index.js > "$LOG_FILE" 2>&1 &
        PID=$!
        echo $PID > "$PID_FILE"
        
        sleep 2
        if ps -p $PID > /dev/null; then
            URL="http://localhost:$PORT"
            echo "✅ Server started successfully"
            echo "   URL: $URL"
            
            # Open browser if possible
            if command -v xdg-open >/dev/null; then
                xdg-open "$URL" 2>/dev/null &
            fi
        else
            echo "❌ Failed to start server"
            rm -f "$PID_FILE"
            return 1
        fi
    }

    stop_server() {
        if [ ! -f "$PID_FILE" ]; then
            echo "❌ Server not running"
            return 1
        fi
        
        PID=$(cat "$PID_FILE")
        if ps -p $PID > /dev/null 2>&1; then
            echo "🛑 Stopping server (PID: $PID)..."
            kill $PID
            rm -f "$PID_FILE"
            echo "✅ Server stopped"
        else
            echo "⚠️  Server not running, cleaning up..."
            rm -f "$PID_FILE"
        fi
    }

    case "$1" in
        start) start_server ;;
        stop) stop_server ;;
        restart) stop_server; sleep 1; start_server ;;
        *)
            echo "Usage: cce-web {start|stop|restart}"
            echo "Web Interface Manager"
            ;;
    esac
fi
